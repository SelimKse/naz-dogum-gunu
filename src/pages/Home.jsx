import React, { useState, useEffect, useMemo } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { useNavigate } from "react-router-dom";
import PropTypes from "prop-types";
import TopNavigation from "../components/TopNavigation";
import StoryTimer from "../components/StoryTimer";

const Home = ({ onStartMusic, onUpdateTimer }) => {
  const [currentStep, setCurrentStep] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(false);
  const [showIntro, setShowIntro] = useState(true);
  const navigate = useNavigate();

  const storySteps = useMemo(() => [
    {
      id: 0,
      title: "Ä°yi ki DoÄŸdun CanÄ±m Benim!",
      subtitle: "BugÃ¼n senin iÃ§in Ã¶zel bir gÃ¼n",
      description:
        "Kalbimin en deÄŸerli hazinesi... BugÃ¼n doÄŸduÄŸun gÃ¼n, hayatÄ±ma renk katan, her anÄ±ma anlam veren sen. Senin varlÄ±ÄŸÄ±n, her gÃ¼nÃ¼nÃ¼ aydÄ±nlatan bir gÃ¼neÅŸ gibi. Stitch ve Lilo'nun sevgisi gibi saf ve sonsuz... Sen benim Ohana'mÄ±n en gÃ¼zel parÃ§asÄ±sÄ±n. Seni Ã§ok ama Ã§ok seviyorum.",
      emoji: "ðŸŽ‚",
      duration: 8000,
    },
    {
      id: 1,
      title: "Senin Hikayen",
      subtitle: "Sadece senin iÃ§in yazÄ±ldÄ±",
      description:
        "Bu hikaye, seninle geÃ§irdiÄŸim her anÄ±n, her gÃ¼lÃ¼ÅŸÃ¼nÃ¼n, her bakÄ±ÅŸÄ±nÄ±n bir hatÄ±rasÄ±. Kalbimin derinliklerinde sakladÄ±ÄŸÄ±m en gÃ¼zel duygularÄ±, sana olan sevgimi kelimelerle anlatma Ã§abam. Hawaii'nin masmavi denizleri kadar derin, yÄ±ldÄ±zlar kadar sonsuz bir sevgiyle...",
      emoji: "âœ¨",
      duration: 8000,
    },
    {
      id: 2,
      title: "HazÄ±r mÄ±sÄ±n AÅŸkÄ±m?",
      subtitle: "SÃ¼rprizlerle dolu bir yolculuk",
      description:
        "Sana hazÄ±rladÄ±ÄŸÄ±m bu bÃ¼yÃ¼lÃ¼ dÃ¼nyada, kalbimin sesini duyacaksÄ±n. Her sayfa senin iÃ§in Ã¶zel, her kelime sevgiyle yazÄ±lmÄ±ÅŸ. GÃ¶zlerinin parÄ±ltÄ±sÄ±, gÃ¼lÃ¼ÅŸÃ¼nÃ¼n bÃ¼yÃ¼sÃ¼... Hepsi bu hikayede saklÄ±. Haydi, birlikte bu aÅŸk dolu yolculuÄŸa baÅŸlayalÄ±m!",
      emoji: "ðŸŒŸ",
      duration: 8000,
    },
  ], []);

  // Timer'Ä± her zaman gÃ¼ncelle
  useEffect(() => {
    if (isAutoPlaying && !showIntro) {
      onUpdateTimer(
        <StoryTimer
          duration={storySteps[currentStep].duration}
          currentStep={currentStep}
          totalSteps={storySteps.length}
          isActive={true}
        />
      );
    } else {
      onUpdateTimer(null);
    }
  }, [currentStep, isAutoPlaying, showIntro, storySteps, onUpdateTimer]);

  // Otomatik geÃ§iÅŸ - son adÄ±mda da tam sÃ¼re bekle
  useEffect(() => {
    if (!isAutoPlaying) return;

    const timer = setTimeout(() => {
      if (currentStep < storySteps.length - 1) {
        setCurrentStep((prev) => prev + 1);
      } else {
        // Son adÄ±m da bitti, timeline'a geÃ§
        navigate("/timeline");
      }
    }, storySteps[currentStep].duration);

    return () => clearTimeout(timer);
  }, [currentStep, isAutoPlaying, storySteps, navigate]);

  const startStory = () => {
    setShowIntro(false);
    setIsAutoPlaying(true);
    setCurrentStep(0);
    // MÃ¼ziÄŸi baÅŸlat
    if (onStartMusic) {
      onStartMusic();
    }
  };

  const currentStepData = storySteps[currentStep];

  return (
    <div className="min-h-screen bg-black relative overflow-hidden">
      {/* Arka Plan Gradient */}
      <div className="absolute inset-0 bg-gradient-to-br from-blue-900/20 via-purple-900/20 to-black"></div>

      {/* Subtle Particles */}
      <div className="absolute inset-0">
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-1 h-1 bg-blue-400/30 rounded-full"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
            }}
            animate={{
              opacity: [0.3, 0.8, 0.3],
              scale: [1, 1.5, 1],
            }}
            transition={{
              duration: 3 + Math.random() * 2,
              repeat: Infinity,
              delay: Math.random() * 2,
            }}
          />
        ))}
      </div>

      {/* Ana Ä°Ã§erik */}
      <div className="relative z-10 min-h-screen flex items-center justify-center px-4">
        <div className="text-center max-w-6xl mx-auto">
          {/* GiriÅŸ SayfasÄ± */}
          {showIntro && (
            <motion.div
              className="mb-16"
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              exit={{ opacity: 0, scale: 1.2 }}
              transition={{ duration: 0.8 }}
            >
              {/* BaÅŸlÄ±k */}
              <motion.h1
                className="text-6xl md:text-8xl font-bold mb-8"
                style={{ fontFamily: "'Playfair Display', serif" }}
                animate={{
                  textShadow: [
                    "0 0 20px rgba(59, 130, 246, 0.5)",
                    "0 0 40px rgba(147, 51, 234, 0.8)",
                    "0 0 20px rgba(59, 130, 246, 0.5)",
                  ],
                }}
                transition={{
                  duration: 3,
                  repeat: Infinity,
                  ease: "easeInOut",
                }}
              >
                <span className="bg-gradient-to-r from-pink-400 via-purple-400 to-blue-400 bg-clip-text text-transparent">
                  CanÄ±m Naz'Ä±m
                </span>
                <motion.span
                  className="inline-block ml-4"
                  animate={{
                    rotate: [0, 10, -10, 0],
                    scale: [1, 1.2, 1],
                  }}
                  transition={{
                    duration: 3,
                    repeat: Infinity,
                    ease: "easeInOut",
                  }}
                >
                  ðŸ’–
                </motion.span>
              </motion.h1>

              {/* AÃ§Ä±klama */}
              <motion.div
                className="max-w-5xl mx-auto mb-12"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
              >
                <motion.p
                  className="text-2xl md:text-3xl text-gray-200 mb-6 leading-relaxed font-light"
                  style={{ fontFamily: "'Poppins', sans-serif" }}
                >
                  Kalbimin en derin kÃ¶ÅŸesinden,
                  <br />
                  <span className="text-pink-400 font-semibold bg-gradient-to-r from-pink-400 to-purple-400 bg-clip-text text-transparent">
                    Sana olan sonsuz sevgimle
                  </span>{" "}
                  hazÄ±rladÄ±ÄŸÄ±m bu Ã¶zel hikaye...
                </motion.p>

                <motion.p
                  className="text-xl text-gray-300 leading-relaxed"
                  style={{ fontFamily: "'Poppins', sans-serif" }}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.8 }}
                >
                  Her kelimesi kalbimin derinliklerinden, her cÃ¼mlesi sevgiyle yazÄ±lmÄ±ÅŸ...
                  <br />
                  <span className="text-pink-400 font-semibold text-2xl">
                    "Sen benim kalbimin en gÃ¼zel yerinde yaÅŸÄ±yorsun..."
                  </span>
                </motion.p>
              </motion.div>

              {/* Hikayeyi BaÅŸlat Butonu */}
              <motion.button
                onClick={startStory}
                className="bg-gradient-to-r from-pink-600 to-purple-600 text-white px-12 py-4 rounded-2xl font-bold text-xl hover:from-pink-700 hover:to-purple-700 transition-all duration-300 shadow-2xl shadow-pink-500/50"
                style={{ fontFamily: "'Poppins', sans-serif" }}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                initial={{ opacity: 0, y: 20 }}
                animate={{
                  opacity: 1,
                  y: 0,
                  boxShadow: [
                    "0 0 30px rgba(59, 130, 246, 0.5)",
                    "0 0 50px rgba(147, 51, 234, 0.8)",
                    "0 0 30px rgba(59, 130, 246, 0.5)",
                  ],
                }}
                transition={{
                  opacity: { delay: 1.2 },
                  y: { delay: 1.2 },
                  boxShadow: {
                    duration: 2,
                    repeat: Infinity,
                    ease: "easeInOut",
                  },
                }}
              >
                Hikayeyi BaÅŸlat
              </motion.button>
            </motion.div>
          )}

          {/* Hikaye Ä°Ã§eriÄŸi - Sadece giriÅŸ kapandÄ±ktan sonra */}
          {!showIntro && (
            <>
              {/* Progress Dots */}
              <div className="flex justify-center space-x-3 mb-12">
                {storySteps.map((_, index) => (
                  <motion.div
                    key={index}
                    className={`w-3 h-3 rounded-full ${
                      index <= currentStep ? "bg-blue-400" : "bg-gray-600"
                    }`}
                    animate={{
                      scale: index === currentStep ? [1, 1.2, 1] : 1,
                    }}
                    transition={{
                      duration: 1,
                      repeat: index === currentStep ? Infinity : 0,
                    }}
                  />
                ))}
              </div>

              {/* Story Content */}
              <AnimatePresence mode="wait">
                <motion.div
                  key={currentStep}
                  className="mb-16"
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -30 }}
                  transition={{ duration: 0.6 }}
                >
                  {/* Emoji */}
                  <motion.div
                    className="text-8xl mb-8"
                    animate={{
                      scale: [1, 1.1, 1],
                    }}
                    transition={{
                      duration: 2,
                      repeat: Infinity,
                      ease: "easeInOut",
                    }}
                  >
                    {currentStepData.emoji}
                  </motion.div>

                  {/* Title */}
                  <motion.h1
                    className="text-5xl md:text-7xl font-bold mb-6"
                    style={{ fontFamily: "'Playfair Display', serif" }}
                    animate={{
                      textShadow: [
                        "0 0 20px rgba(59, 130, 246, 0.5)",
                        "0 0 40px rgba(147, 51, 234, 0.8)",
                        "0 0 20px rgba(59, 130, 246, 0.5)",
                      ],
                    }}
                    transition={{
                      duration: 3,
                      repeat: Infinity,
                      ease: "easeInOut",
                    }}
                  >
                    <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-blue-400 bg-clip-text text-transparent">
                      {currentStepData.title}
                    </span>
                  </motion.h1>

                  {/* Subtitle */}
                  <motion.p
                    className="text-xl md:text-2xl text-pink-300 mb-8 font-medium"
                    style={{ fontFamily: "'Poppins', sans-serif" }}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 0.3 }}
                  >
                    {currentStepData.subtitle}
                  </motion.p>

                  {/* Description */}
                  <motion.p
                    className="text-lg text-gray-300 mb-12 max-w-4xl mx-auto leading-relaxed"
                    style={{ fontFamily: "'Poppins', sans-serif" }}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 0.5 }}
                  >
                    {currentStepData.description}
                  </motion.p>

                  {/* Start Button */}
                  {currentStep === 0 && !isAutoPlaying && (
                    <motion.button
                      onClick={startStory}
                      className="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-12 py-4 rounded-2xl font-bold text-xl hover:from-blue-700 hover:to-purple-700 transition-all duration-300 shadow-2xl shadow-blue-500/50"
                      style={{ fontFamily: "Fredoka, cursive" }}
                      whileHover={{ scale: 1.05 }}
                      whileTap={{ scale: 0.95 }}
                      animate={{
                        boxShadow: [
                          "0 0 30px rgba(59, 130, 246, 0.5)",
                          "0 0 50px rgba(147, 51, 234, 0.8)",
                          "0 0 30px rgba(59, 130, 246, 0.5)",
                        ],
                      }}
                      transition={{
                        boxShadow: {
                          duration: 2,
                          repeat: Infinity,
                          ease: "easeInOut",
                        },
                      }}
                    >
                      Hikayeyi BaÅŸlat
                    </motion.button>
                  )}

                  {/* Loading State */}
                  {isAutoPlaying && currentStep === storySteps.length - 1 && (
                    <motion.div
                      className="text-center"
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      transition={{ delay: 0.5 }}
                    >
                      <motion.div
                        className="w-8 h-8 border-4 border-blue-400 border-t-transparent rounded-full mx-auto mb-4"
                        animate={{ rotate: 360 }}
                        transition={{
                          duration: 1,
                          repeat: Infinity,
                          ease: "linear",
                        }}
                      />
                      <p
                        className="text-gray-400"
                        style={{ fontFamily: "Comfortaa, cursive" }}
                      >
                        Hikayeye geÃ§iliyor...
                      </p>
                    </motion.div>
                  )}
                </motion.div>
              </AnimatePresence>
            </>
          )}
        </div>
      </div>
    </div>
  );
};

Home.propTypes = {
  onStartMusic: PropTypes.func,
  onUpdateTimer: PropTypes.func,
};

export default Home;
